<?xml version='1.0' encoding='UTF-8'?>
<!--

    Copyright 2019 XEBIALABS

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->
<synthetic xsi:schemaLocation="http://www.xebialabs.com/deployit/synthetic synthetic.xsd"
           xmlns="http://www.xebialabs.com/deployit/synthetic"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <type type="ansible.Tower" extends="configuration.HttpConnection">
        <property name="checkConfigurationPath" hidden="true" default="/api/"/>
        <property name="scriptLocation" hidden="true" default="ansible/HttpConnectionCheck.py"/>
    </type>

    <type type="ansible.TowerTask" extends="xlrelease.PythonScript" virtual="true">
        <property name="taskColor" hidden="true" default="#FF9E3B"/>
        <property name="iconLocation" default="tower/tower_logo.svg" hidden="true"/>
        <property name="tower_server" category="input" label="Ansible Tower Server" referenced-type="ansible.Tower"
                  kind="ci" required="true" description="Ansible Tower Server."/>
        <property name="username" category="input" required="false"/>
        <property name="password" password="true" category="input" required="false"/>
    </type>

    <type type="ansible.LaunchJob" extends="ansible.TowerTask">
        <property name="scriptLocation" hidden="true" default="ansible_tower/run_job_template.py"/>
        <!-- input params -->
        <property name="jobTemplate" category="input" required="true"
                  description="Primary key or name of the job template to launch new job."/>
        <property name="inventory" category="input" kind="string" required="false"
                  description="The inventory name of a integer value for the foreign key of an inventory to use in this job run"/>
        <property name="credential" category="input" kind="string" required="false"
                  description="The credential name or a integer value for the foreign key of a credential to use in this job run"/>
        <property name="extraVars" category="input" required="false" kind="list_of_string" size="large" hidden="true"
                  description="yaml formatted texts that contains extra variables to pass on."/>
        <property label="Extra Vars" name="extraVars2" category="input" required="false" kind="string" size="large"
                  description="a single yaml formatted text that contains extra variables to pass on."/>
        <property name="taskPasswordToken" required="false" category="input" hidden="true"/>
        <property name="taskPassword" required="false" password="true" category="input" hidden="true"/>
        <property name="waitTillComplete" kind="boolean" category="input" required="false" default="true"
                  description="Wait for successful completion or fail."/>
        <property name="stopOnFailure" kind="boolean" category="input" required="false" default="true"
                  description="Fail task when job fails"/>
        <!-- output params -->
        <property name="jobId" category="output"/>
        <property name="jobStatus" category="output"/>

        <property name="jobTemplateId" category="input" kind="integer" required="true" hidden="true" default="9999"/>
    </type>

    <type type="ansible.LaunchJobTemplate" extends="ansible.LaunchJob"/>

</synthetic>
